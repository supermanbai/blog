<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Supermanbai</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-27T08:35:37.710Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Supermanbai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>v-for</title>
    <link href="http://yoursite.com/2018/10/27/v-for/"/>
    <id>http://yoursite.com/2018/10/27/v-for/</id>
    <published>2018-10-27T07:59:12.000Z</published>
    <updated>2018-10-27T08:35:37.710Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="v-for-的基本用法"><a href="#v-for-的基本用法" class="headerlink" title="v-for 的基本用法"></a>v-for 的基本用法</h3><p>模板写法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &lt;li v-<span class="keyword">for</span>=<span class="string">"item in items"</span>&gt;</span><br><span class="line">        &#123;&#123;item&#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/li&gt;</span></span><br></pre></td></tr></table></figure></p><p>js写法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app=<span class="keyword">new</span> Vue(&#123;</span><br><span class="line">     el:<span class="string">'#app'</span>,</span><br><span class="line">     data:&#123;</span><br><span class="line">         items:[<span class="number">20</span>,<span class="number">23</span>,<span class="number">18</span>,<span class="number">65</span>,<span class="number">32</span>,<span class="number">19</span>,<span class="number">54</span>,<span class="number">56</span>,<span class="number">41</span>]</span><br><span class="line">     &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><a id="more"></a><p>完整代码:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"../assets/js/vue.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;title&gt;V-<span class="keyword">for</span> 案例&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;v-<span class="keyword">for</span>指令用法&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">    &lt;hr&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div id="app"&gt;</span></span><br><span class="line"><span class="regexp">       &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">           &lt;li v-for="item in items"&gt;</span></span><br><span class="line"><span class="regexp">                &#123;&#123;item&#125;&#125;</span></span><br><span class="line"><span class="regexp">           &lt;/</span>li&gt;</span><br><span class="line">       &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">var</span> app=<span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            el:<span class="string">'#app'</span>,</span><br><span class="line">            data:&#123;</span><br><span class="line">                items:[<span class="number">20</span>,<span class="number">23</span>,<span class="number">18</span>,<span class="number">65</span>,<span class="number">32</span>,<span class="number">19</span>,<span class="number">54</span>,<span class="number">56</span>,<span class="number">41</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure></p><p>这是一个最基础的循环，先在js里定义了items数组，然后在模板中用v-for循环出来，需要注意的是，你需要哪个html标签循环，v-for就写在哪个上边。</p><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>我们已经输出了我们定义的数组，但是我要在输出之前给数据排序，那么就用到了vue的<code>computed:</code>属性<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">    sortItems:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">this</span>.items.sort();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们在computed里新声明了一个对象sortItems，如果不重新声明会污染原来的数据源，这是Vue不允许的，所以你要重新声明一个对象。</p><p>如果一切顺利的话，你已经看到了结果，但是这个小程序还是有个小Bug的，现在我把数组修改成这样。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">items:[<span class="number">20</span>,<span class="number">23</span>,<span class="number">18</span>,<span class="number">65</span>,<span class="number">32</span>,<span class="number">19</span>,<span class="number">5</span>,<span class="number">56</span>,<span class="number">41</span>]</span><br></pre></td></tr></table></figure></p><p>我们把其中的54修改成了5，我们再看一下结果，发现排序结果并不是我们想要的。</p><p>我们可以自己编写一个方法sortNumber，然后传给我们的sort函数解决这个Bug。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortNumber</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a-b</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>用法:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">    sortItems:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.items.sort(sortNumber);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>今天身体不适，暂停更新。以上笔记均为手写，转自<a href="http://jspang.com" target="_blank" rel="noopener"><code>JSPang</code></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;v-for-的基本用法&quot;&gt;&lt;a href=&quot;#v-for-的基本用法&quot; class=&quot;headerlink&quot; title=&quot;v-for 的基本用法&quot;&gt;&lt;/a&gt;v-for 的基本用法&lt;/h3&gt;&lt;p&gt;模板写法&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;li v-&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item in items&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&amp;#123;item&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;js写法&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; app=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     el:&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     data:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         items:[&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;54&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="vue学习" scheme="http://yoursite.com/categories/vue%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="框架" scheme="http://yoursite.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>vue</title>
    <link href="http://yoursite.com/2018/10/26/vue/"/>
    <id>http://yoursite.com/2018/10/26/vue/</id>
    <published>2018-10-25T16:13:22.000Z</published>
    <updated>2018-10-26T12:40:31.695Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>前端学习之vue.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"../assets/js/vue.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;title&gt;Helloworld&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Hello World&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">    &lt;hr&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div id="app"&gt;</span></span><br><span class="line"><span class="regexp">        &#123;&#123;message&#125;&#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">var</span> app=<span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            el:<span class="string">'#app'</span>,</span><br><span class="line">            data:&#123;</span><br><span class="line">                message:<span class="string">'hello Vue!'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="v-if的使用："><a href="#v-if的使用：" class="headerlink" title="v-if的使用："></a>v-if的使用：</h3><p>v-if 是vue的一个内部指令，用来判断是否用来加载html的DOM，比如我们用来模拟一个用户登录状态，在用户登录后实现用户名称：<br>关键代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-<span class="keyword">if</span>=<span class="string">"isLogin"</span>&gt;Hello,bai!&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>完整html:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"../assets/js/vue.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;title&gt;v-<span class="keyword">if</span> &amp; v-show &amp; v-<span class="keyword">else</span>&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;v-<span class="keyword">if</span> 判断是否加载&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">    &lt;hr&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div id="app"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div v-if="isLogin"&gt;hello,bai!&lt;/</span>div&gt;</span><br><span class="line">        &lt;div v-<span class="keyword">else</span>&gt;请登录后操作&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">var</span> app=<span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            el:<span class="string">'#app'</span>,</span><br><span class="line">            data:&#123;</span><br><span class="line">               isLogin:<span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure></p><p>这里我们在vue的data里定义了isLogin的值，当它为true时，网页就会显示：hello,bai!，如果为false时，就显示请登录后操作。</p><h3 id="v-show的使用："><a href="#v-show的使用：" class="headerlink" title="v-show的使用："></a>v-show的使用：</h3><p>调整css中display属性，DOM已经加载，只是css控制没有显示出来。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Hello,World!&lt;/title&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;h1&gt;已经进入第二页&lt;/</span>h1&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;h2 style=<span class="string">"margin-left: 100px;"</span>&gt;&#123;&#123;message&#125;&#125;&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div v-if="isLogin"&gt;你好，已登录&lt;/</span>div&gt;</span><br><span class="line">        &lt;div v-<span class="keyword">else</span>&gt;请登录&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div v-show="isLoad"&gt;已加载&lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="/</span>vue练习/assets/js/vue.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">        var app = new Vue(&#123;</span></span><br><span class="line"><span class="string">            el:'#app',</span></span><br><span class="line"><span class="string">            data:&#123;</span></span><br><span class="line"><span class="string">                message:'Hello,Congratulations on your second page.',</span></span><br><span class="line"><span class="string">                isLogin: false,</span></span><br><span class="line"><span class="string">                isLoad: false</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="v-if和v-show的区别："><a href="#v-if和v-show的区别：" class="headerlink" title="v-if和v-show的区别："></a>v-if和v-show的区别：</h2><ul><li>v-if :判断是否加载，可以减轻请求服务器的压力，在需要时加载。</li><li>v-show :调整css display属性，可以使客户端操作更加流畅。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端学习之vue.js&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html lang=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;meta charset=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script type=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&quot;../assets/js/vue.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;Helloworld&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/title&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;&amp;lt;/&lt;/span&gt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;h1&amp;gt;Hello World&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;    &amp;lt;hr&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;    &amp;lt;div id=&quot;app&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;        &amp;#123;&amp;#123;message&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;    &amp;lt;/&lt;/span&gt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script type=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; app=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            el:&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            data:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                message:&lt;span class=&quot;string&quot;&gt;&#39;hello Vue!&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;&amp;lt;/&lt;/span&gt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="vue学习" scheme="http://yoursite.com/categories/vue%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="框架" scheme="http://yoursite.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>七种实现左侧固定，右侧适应两栏自适应的方法</title>
    <link href="http://yoursite.com/2018/10/09/%E4%B8%83%E7%A7%8D%E5%AE%9E%E7%8E%B0%E5%B7%A6%E4%BE%A7%E5%9B%BA%E5%AE%9A%EF%BC%8C%E5%8F%B3%E4%BE%A7%E9%80%82%E5%BA%94%E4%B8%A4%E6%A0%8F%E8%87%AA%E9%80%82%E5%BA%94%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/10/09/七种实现左侧固定，右侧适应两栏自适应的方法/</id>
    <published>2018-10-09T02:19:40.000Z</published>
    <updated>2018-10-24T16:06:36.693Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>总结一下左边固定的方法，老生常谈的是<code>float方法</code>，<code>bfc方法</code>，也有css3中的<code>flex布局</code>和<code>grid布局</code>,并非所有的布局都会在开发中使用</p><p>常用的宽度自适应的方法通常是利用了<code>block</code>水平的元素宽度能够随父容器调节的流动特性，另外一种思路是利用CSS中的<code>calc()</code>方法来动态设定宽度。还有一种思路是，利用CSS中的新型布局<code>flex layout</code>与<code>grid layout</code>。</p><h3 id="首先创建html布局最基本的样式"><a href="#首先创建html布局最基本的样式" class="headerlink" title="首先创建html布局最基本的样式"></a>首先创建html布局最基本的样式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;wrapper&quot; id=&quot;wrapper&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;left&quot;&gt;</span><br><span class="line">    左边固定宽度，高度不固定 &lt;/br&gt; &lt;/br&gt;&lt;/br&gt;&lt;/br&gt;高度有可能会很小，也可能很大。</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">    这里的内容可能比左侧高，也可能比左侧低。宽度需要自适应。&lt;/br&gt;</span><br><span class="line">    基本的样式是，两个div相距20px, 左侧div宽 120px</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>基本的样式是，两个盒子相距20px, 左侧盒子宽 120px，右侧盒子宽度自适应。基本的CSS样式如下:</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.wrapper &#123;</span><br><span class="line">    padding: 15px 20px;</span><br><span class="line">    border: 1px dashed #ff6c60;</span><br><span class="line">&#125;</span><br><span class="line">.left &#123;</span><br><span class="line">    width: 120px;</span><br><span class="line">    border: 5px solid #ddd;</span><br><span class="line">&#125;</span><br><span class="line">.right &#123;</span><br><span class="line">    margin-left: 20px;</span><br><span class="line">    border: 5px solid #ddd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面的代码都是基于这套基本代码做覆盖，通过给容器添加不同的类来实现效果。</p><h3 id="双inline-block方案"><a href="#双inline-block方案" class="headerlink" title="  双inline-block方案 "></a><font color="#228207">  双inline-block方案 </font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.wrapper-inline-block &#123;</span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">    font-size: <span class="number">0</span>;    <span class="comment">// 消除空格的影响</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-inline-block .left,</span><br><span class="line">.wrapper-inline-block .right &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    vertical-align: top;    <span class="comment">// 顶端对齐</span></span><br><span class="line">    font-size: <span class="number">14</span>px;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-inline-block .right &#123;</span><br><span class="line">    width: calc(<span class="number">100</span>% - <span class="number">140</span>px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种方法是通过width: calc(100% - 140px)来动态计算右侧盒子的宽度。需要知道右侧盒子距离左边的距离，以及左侧盒子具体的宽度(content+padding+border)，以此计算父容器宽度的100%需要减去的数值。同时，还需要知道右侧盒子的宽度是否包含border的宽度。<br>在这里，为了简单的计算右侧盒子准确的宽度，设置了子元素的box-sizing:border-box;以及父元素的box-sizing: content-box;。<br>同时，作为两个inline-block的盒子，必须设置vertical-align来使其顶端对齐。<br>另外，为了准确地应用计算出来的宽度，需要消除div之间的空格，需要通过设置父容器的font-size: 0;,或者用注释消除html中的空格等方法。</p><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li><p>需要知道左侧盒子的宽度，两个盒子的距离，还要设置各个元素的box-sizing</p></li><li><p>需要消除空格字符的影响</p></li><li><p>需要设置vertical-align: top满足顶端对齐。</p></li></ul><h3 id="双float方案"><a href="#双float方案" class="headerlink" title="  双float方案 "></a><font color="#228207">  双float方案 </font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.wrapper-double-float &#123;</span><br><span class="line">    overflow: auto;        <span class="comment">// 清除浮动</span></span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-double-float .left,</span><br><span class="line">.wrapper-double-float .right &#123;</span><br><span class="line">    float: left;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-double-float .right &#123;</span><br><span class="line">    width: calc(<span class="number">100</span>% - <span class="number">140</span>px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本方案和双float方案原理相同，都是通过动态计算宽度来实现自适应。但是，由于浮动的block元素在有空间的情况下会依次紧贴，排列在一行，所以无需设置display: inline-block;，自然也就少了顶端对齐，空格字符占空间等问题。</p><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ul><li><p>需要知道左侧盒子的宽度，两个盒子的距离，还要设置各个元素的box-sizing。</p></li><li><p>父元素需要清除浮动。</p></li></ul><h3 id="float-margin-left方案"><a href="#float-margin-left方案" class="headerlink" title="  float+margin-left方案 "></a><font color="#228207">  float+margin-left方案 </font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.wrapper-float &#123;</span><br><span class="line">    overflow: hidden;        <span class="comment">// 清除浮动</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-float .left &#123;</span><br><span class="line">    float: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-float .right &#123;</span><br><span class="line">    margin-left: <span class="number">150</span>px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面两种方案都是利用了CSS的calc()函数来计算宽度值。下面两种方案则是利用了block级别的元素盒子的宽度具有填满父容器，并随着父容器的宽度自适应的流动特性。<br>但是block级别的元素都是独占一行的，所以要想办法让两个block排列到一起。<br>我们知道，block级别的元素会认为浮动的元素不存在，但是inline级别的元素能识别到浮动的元素。这样，block级别的元素就可以和浮动的元素同处一行了。<br>为了让右侧盒子和左侧盒子保持距离，需要为左侧盒子留出足够的距离。这个距离的大小为左侧盒子的宽度以及两个盒子之间的距离之和。然后将该值设置为右侧盒子的margin-left。</p><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><ul><li><p>需要清除浮动</p></li><li><p>需要计算右侧盒子的margin-left</p></li></ul><h3 id="使用float-BFC方法"><a href="#使用float-BFC方法" class="headerlink" title="  使用float+BFC方法 "></a><font color="#228207">  使用float+BFC方法 </font></h3><p>上面的方法都需要通过左侧盒子的宽度，计算某个值，下面三种方法都是不需要计算的。只需要设置两个盒子之间的间隔。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.wrapper-float-bfc &#123;</span><br><span class="line">    overflow: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-float-bfc .left &#123;</span><br><span class="line">    float: left;</span><br><span class="line">    margin-right: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-float-bfc .right &#123;</span><br><span class="line">    margin-left: 0;</span><br><span class="line">    overflow: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方案同样是利用了左侧浮动，但是右侧盒子通过overflow: auto;形成了BFC，因此右侧盒子不会与浮动的元素重叠。</p><p>这种情况下，只需要为左侧的浮动盒子设置margin-right，就可以实现两个盒子的距离了。而右侧盒子是block级别的，所以宽度能实现自适应。</p><h4 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a>缺点</h4><ul><li>父元素需要清除浮动</li></ul><h3 id="flex方案"><a href="#flex方案" class="headerlink" title="  flex方案 "></a><font color="#228207">  flex方案 </font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.wrapper-flex &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: flex-start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-flex .left &#123;</span><br><span class="line">    flex: <span class="number">0</span> <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-flex .right &#123;</span><br><span class="line">    flex: <span class="number">1</span> <span class="number">1</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flex可以说是最好的方案了，代码少，使用简单。有朝一日，大家都改用现代浏览器，就可以使用了。<br>需要注意的是，flex容器的一个默认属性值:align-items: stretch;。这个属性导致了列等高的效果。<br>为了让两个盒子高度自动，需要设置: align-items: flex-start;</p><h3 id="grid方案"><a href="#grid方案" class="headerlink" title="  grid方案 "></a><font color="#228207">  grid方案 </font></h3><p>又一个新型的布局方式。可以满足需求，但这并不是它发挥用处的真正地方。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">.wrapper-grid &#123;</span><br><span class="line">    display: grid;</span><br><span class="line">    grid-template-columns: <span class="number">120</span>px <span class="number">1</span>fr;</span><br><span class="line">    align-items: start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-grid .left,</span><br><span class="line">.wrapper-grid .right &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-grid .left &#123;</span><br><span class="line">    grid-column: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.wrapper-grid .right &#123;</span><br><span class="line">    grid-column: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li><p>grid布局也有列等高的默认效果。需要设置: align-items: start;。</p></li><li><p>grid布局还有一个值得注意的小地方和flex不同:在使用margin-left的时候，grid布局默认是box-sizing设置的盒宽度之间的位置。而flex则是使用两个div的border或者padding外侧之间的距离。<br><img src="mahua-logo.jpg" alt="mahua"></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结一下左边固定的方法，老生常谈的是&lt;code&gt;float方法&lt;/code&gt;，&lt;code&gt;bfc方法&lt;/code&gt;，也有css3中的&lt;code&gt;flex布局&lt;/code&gt;和&lt;code&gt;grid布局&lt;/code&gt;,并非所有的布局都会在开发中使用&lt;/p&gt;
&lt;p&gt;常用的宽度自适应的方法通常是利用了&lt;code&gt;block&lt;/code&gt;水平的元素宽度能够随父容器调节的流动特性，另外一种思路是利用CSS中的&lt;code&gt;calc()&lt;/code&gt;方法来动态设定宽度。还有一种思路是，利用CSS中的新型布局&lt;code&gt;flex layout&lt;/code&gt;与&lt;code&gt;grid layout&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;首先创建html布局最基本的样式&quot;&gt;&lt;a href=&quot;#首先创建html布局最基本的样式&quot; class=&quot;headerlink&quot; title=&quot;首先创建html布局最基本的样式&quot;&gt;&lt;/a&gt;首先创建html布局最基本的样式&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;wrapper&amp;quot; id=&amp;quot;wrapper&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;left&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    左边固定宽度，高度不固定 &amp;lt;/br&amp;gt; &amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt;高度有可能会很小，也可能很大。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;right&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    这里的内容可能比左侧高，也可能比左侧低。宽度需要自适应。&amp;lt;/br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    基本的样式是，两个div相距20px, 左侧div宽 120px&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基本的样式是，两个盒子相距20px, 左侧盒子宽 120px，右侧盒子宽度自适应。基本的CSS样式如下:&lt;/p&gt;
    
    </summary>
    
      <category term="html" scheme="http://yoursite.com/categories/html/"/>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
      <category term="布局" scheme="http://yoursite.com/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap导航条遇到的小case</title>
    <link href="http://yoursite.com/2018/10/08/bootstrap%E5%AF%BC%E8%88%AA%E6%9D%A1%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/10/08/bootstrap导航条问题/</id>
    <published>2018-10-08T12:19:37.000Z</published>
    <updated>2018-10-23T08:44:38.499Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Bootstrap导航条的下拉列表显示不完全"><a href="#Bootstrap导航条的下拉列表显示不完全" class="headerlink" title="Bootstrap导航条的下拉列表显示不完全"></a>Bootstrap导航条的下拉列表显示不完全</h1><hr><h2 id="类名navbar不能设置高度"><a href="#类名navbar不能设置高度" class="headerlink" title="类名navbar不能设置高度"></a>类名navbar不能设置高度</h2><p><img src="https://wx1.sinaimg.cn/mw690/006oemdXly1fw13aq014cj30af0eat8v.jpg" alt="mahua"></p><a id="more"></a><p>设置高度就会让nav下拉的过程中出现导航条（如图右侧灰色的部分）</p><h2 id="bootstrap-中下拉列表中的两个div要同级-BING-QIE-一个设置position-relative-一个设置position-solutate"><a href="#bootstrap-中下拉列表中的两个div要同级-BING-QIE-一个设置position-relative-一个设置position-solutate" class="headerlink" title="bootstrap 中下拉列表中的两个div要同级 BING QIE 一个设置position:relative;一个设置position:solutate"></a>bootstrap 中下拉列表中的两个div要同级 BING QIE 一个设置position:relative;一个设置position:solutate</h2><p><img src="https://wx2.sinaimg.cn/mw690/006oemdXly1fw13nszpunj30hf07o3yi.jpg" alt="mahua"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Bootstrap导航条的下拉列表显示不完全&quot;&gt;&lt;a href=&quot;#Bootstrap导航条的下拉列表显示不完全&quot; class=&quot;headerlink&quot; title=&quot;Bootstrap导航条的下拉列表显示不完全&quot;&gt;&lt;/a&gt;Bootstrap导航条的下拉列表显示不完全&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;类名navbar不能设置高度&quot;&gt;&lt;a href=&quot;#类名navbar不能设置高度&quot; class=&quot;headerlink&quot; title=&quot;类名navbar不能设置高度&quot;&gt;&lt;/a&gt;类名navbar不能设置高度&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://wx1.sinaimg.cn/mw690/006oemdXly1fw13aq014cj30af0eat8v.jpg&quot; alt=&quot;mahua&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="小case" scheme="http://yoursite.com/categories/%E5%B0%8Fcase/"/>
    
    
      <category term="hexo github 搭建博客" scheme="http://yoursite.com/tags/hexo-github-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>case</title>
    <link href="http://yoursite.com/2018/10/08/hhhh/"/>
    <id>http://yoursite.com/2018/10/08/hhhh/</id>
    <published>2018-10-08T12:19:37.000Z</published>
    <updated>2018-10-22T09:55:48.314Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>123456789</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;123456789&lt;/p&gt;

      
    
    </summary>
    
      <category term="小case" scheme="http://yoursite.com/categories/%E5%B0%8Fcase/"/>
    
    
      <category term="hexo github 搭建博客" scheme="http://yoursite.com/tags/hexo-github-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>更换hexo主题</title>
    <link href="http://yoursite.com/2018/09/30/%E6%9B%B4%E6%8D%A2hexo%E4%B8%BB%E9%A2%98/"/>
    <id>http://yoursite.com/2018/09/30/更换hexo主题/</id>
    <published>2018-09-30T03:57:09.000Z</published>
    <updated>2018-10-23T08:46:48.346Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li>查看好你想要的主题</li><li>然后下载下来<h4 id="开始工作"><a href="#开始工作" class="headerlink" title="开始工作"></a>开始工作</h4></li><li>我们先准备一个新的主题，比较有名的就是NexT了，下面以他为例：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">下载主题，输入命令</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li></ul><p>修改显示的主题<br>在项目目录下查找_config.yml找到theme<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title:    网站名称</span><br><span class="line">subtitle:   子名称</span><br><span class="line">description: 网站简介</span><br><span class="line">author:      作者名</span><br><span class="line">language:  简体汉语</span><br><span class="line">timezone: 时区</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>设置Scheme<br>在主题目录下找到_config.yml可以设置Scheme主题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure></p><p>设置菜单<br>同样在主题目录的配置文件中menu配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home   /为url链接。home为显示的图标</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure></p><p>然后可以新生成page<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags 生成标签页 路径</span><br><span class="line">hexo new page categories  生成分类页面</span><br></pre></td></tr></table></figure></p><p>然后就可以测试了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -debug</span><br></pre></td></tr></table></figure></p><p>基本的设置就是这样，如果还要有什么改动可以参考<a href="http://theme-next.iissnan.com/theme-settings.html进行配置" target="_blank" rel="noopener">http://theme-next.iissnan.com/theme-settings.html进行配置</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;查看好你想要的主题&lt;/li&gt;
&lt;li&gt;然后下载下来&lt;h4 id=&quot;开始工作&quot;&gt;&lt;a href=&quot;#开始工作&quot; class=&quot;headerlink&quot; title=&quot;开始工作&quot;&gt;&lt;/a&gt;开始工作&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;我们先准备一个新的主题，比较有名的就是NexT了，下面以他为例：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;下载主题，输入命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/iissnan/hexo-theme-next themes/next&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改显示的主题&lt;br&gt;在项目目录下查找_config.yml找到theme&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;title:    网站名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subtitle:   子名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;description: 网站简介&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;author:      作者名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;language:  简体汉语&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timezone: 时区&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo github 搭建博客</title>
    <link href="http://yoursite.com/2018/09/30/settingup%20the%20environment/"/>
    <id>http://yoursite.com/2018/09/30/settingup the environment/</id>
    <published>2018-09-29T16:11:26.000Z</published>
    <updated>2018-10-23T08:47:55.988Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="hexo-github-搭建博客"><a href="#hexo-github-搭建博客" class="headerlink" title="hexo github 搭建博客"></a>hexo github 搭建博客</h1><hr><p><strong>搭建环境</strong></p><blockquote><ul><li>git</li><li>node.js</li></ul></blockquote><p><strong>搭建命令</strong> </p><blockquote><ul><li>hexo init  初始化项目</li><li>hexo g     部署之前预先生成静态文件</li><li>hexo d     部署项目</li><li>hexo s     本地预览    localhost:4000<a id="more"></a>我的hexo博客是部署在github上的，之前上传到github上真是废了九牛二虎之力，配置ssh出现了一系列的问题，在这里我们来梳理一下hexo搭建的过程：</li></ul></blockquote><h1 id="首先搭建环境："><a href="#首先搭建环境：" class="headerlink" title="首先搭建环境："></a>首先搭建环境：</h1><h2 id="1-1安装git"><a href="#1-1安装git" class="headerlink" title="1.1安装git"></a>1.1安装git</h2><p> —— 安装Git，正常配置就好  <a href="https://git-scm.com/" target="_blank" rel="noopener">Git的下载地址</a><br><img src="https://wx2.sinaimg.cn/mw690/006oemdXly1fvrdg7wpsyj30g60633yk.jpg" alt="enter description here"></p><ul><li><p>请点击Nest</p><p><img src="//wx3.sinaimg.cn/mw690/006oemdXly1fvrdvyfyznj30dz0atjro.jpg" alt="enter description here"></p></li><li>接着点击两次Next,会出现下图  ↓↓↓<br><img src="//wx2.sinaimg.cn/mw690/006oemdXly1fvrdvyh9n1j30dz0atmxi.jpg" alt="enter description here"></li><li>然后深深呼吸一口气，呼吸期间点击Next，然后你就会发现点着点着就出现个Install，没错，我们堵的，不是，我们等的就是Install这个小子，<br><img src="//wx3.sinaimg.cn/mw690/006oemdXly1fvrdvyh5htj30dz0atq34.jpg" alt="enter description here"></li><li>安装完成之后，单击鼠标右键你就会看到:</li><li>Git GUI Here </li><li>Git Bash Here</li><li>安装成功</li></ul><p><img src="//wx4.sinaimg.cn/orj360/006oemdXly1fvrebvyfhwj307j0alt91.jpg" alt="enter description here"></p><h2 id="1-2安装Node-js"><a href="#1-2安装Node-js" class="headerlink" title="1.2安装Node.js"></a>1.2安装Node.js</h2><ul><li><a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">Node.js 安装———菜鸟教程，不再叙述</a></li></ul><h1 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h1><h4 id="在本地新建文件夹，命名规范，要用英文，文件夹名称我们这里就叫做hexodemo，在hexodemo文件夹中右键Git-Bash-Here"><a href="#在本地新建文件夹，命名规范，要用英文，文件夹名称我们这里就叫做hexodemo，在hexodemo文件夹中右键Git-Bash-Here" class="headerlink" title="在本地新建文件夹，命名规范，要用英文，文件夹名称我们这里就叫做hexodemo，在hexodemo文件夹中右键Git Bash Here"></a>在本地新建文件夹，命名规范，要用英文，文件夹名称我们这里就叫做hexodemo，在hexodemo文件夹中右键Git Bash Here</h4><p><img src="//wx1.sinaimg.cn/orj360/006oemdXly1fvreuoi0efj30dw0fxaas.jpg" alt="enter description here"></p><ul><li>首先下载hexo,在git命令行中输入 npm install -g hexo，等待的过程不要着急，五分钟之后就安装好了。</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/1531909-0b9d56643f6b27cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/648/format/webp" alt="enter description here"></p><ul><li>输入命令：hexo init 初始化hexo<br><img src="//wx4.sinaimg.cn/orj360/006oemdXly1fvrf8d0mraj30fp0a7jrt.jpg" alt="enter description here"></li><li>打开hexo文件夹，在_config.yml,进行基础配置<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">查看hexo官方文档</a><br><img src="https://upload-images.jianshu.io/upload_images/1531909-cd5743eda172deca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/663/format/webp" alt="enter description here"><br><a href="https://hexo.io/themes/" target="_blank" rel="noopener">浏览更多主题</a><br><a href="https://supermanbai.github.io/2018/09/30/%E6%9B%B4%E6%8D%A2hexo%E4%B8%BB%E9%A2%98/" target="_blank" rel="noopener">查看如何更换主题</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;hexo-github-搭建博客&quot;&gt;&lt;a href=&quot;#hexo-github-搭建博客&quot; class=&quot;headerlink&quot; title=&quot;hexo github 搭建博客&quot;&gt;&lt;/a&gt;hexo github 搭建博客&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;搭建环境&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;node.js&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;搭建命令&lt;/strong&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;hexo init  初始化项目&lt;/li&gt;
&lt;li&gt;hexo g     部署之前预先生成静态文件&lt;/li&gt;
&lt;li&gt;hexo d     部署项目&lt;/li&gt;
&lt;li&gt;hexo s     本地预览    localhost:4000
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo github 搭建博客" scheme="http://yoursite.com/tags/hexo-github-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>我生命中的一部分</title>
    <link href="http://yoursite.com/2018/05/31/%E6%88%91%E7%94%9F%E5%91%BD%E4%B8%AD%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86/"/>
    <id>http://yoursite.com/2018/05/31/我生命中的一部分/</id>
    <published>2018-05-31T14:53:37.000Z</published>
    <updated>2018-10-23T08:47:32.832Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="我生命中的一部分叫做求职（求知）"><a href="#我生命中的一部分叫做求职（求知）" class="headerlink" title="我生命中的一部分叫做求职（求知）"></a>我生命中的一部分叫做求职（求知）</h1><h3 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h3><p>&nbsp; &nbsp; 我认为在这一面试的过程中，既是对以往学习的检视，又是一个重新认识自己的过<br>程，面试过程中，会知道自己哪些方面不足，哪些方面欠缺，这样，又是给以后的学习过程中指明了一个方向。<br><a id="more"></a><br>![你以为找工作会是这样的]<img src="http://imgsrc.baidu.com/image/c0%3Dshijue1%2C0%2C0%2C294%2C40/sign=9360d7cd8bcb39dbd5cd6f15b87f6351/b7fd5266d0160924e5bc113cde0735fae6cd347f.jpg" alt="mahua"></p><center>但是 </center><br><br><br><center>现实中 </center><p><img src="http://f12.baidu.com/it/u=4162491020,2413222263&amp;fm=72" alt="却是这样的"></p><h3 id="总结几点"><a href="#总结几点" class="headerlink" title="总结几点"></a>总结几点</h3><h4 id="面试之所以这么难，还是因为自身经验和准备都不够充分，在学习的路上我们要一路向前。"><a href="#面试之所以这么难，还是因为自身经验和准备都不够充分，在学习的路上我们要一路向前。" class="headerlink" title="面试之所以这么难，还是因为自身经验和准备都不够充分，在学习的路上我们要一路向前。"></a>面试之所以这么难，还是因为自身经验和准备都不够充分，在学习的路上我们要一路向前。</h4><h4 id="之前一直在思考为什么会出现这种困境，不久，我便在朋友圈找到了问题的答案，分享给大家，共勉"><a href="#之前一直在思考为什么会出现这种困境，不久，我便在朋友圈找到了问题的答案，分享给大家，共勉" class="headerlink" title="之前一直在思考为什么会出现这种困境，不久，我便在朋友圈找到了问题的答案，分享给大家，共勉!!!"></a>之前一直在思考为什么会出现这种困境，不久，我便在朋友圈找到了问题的答案，分享给大家，共勉!!!</h4><p><center> <h1>懒而不自知，知而不能改，改而不能恒</h1></center></p><div style="text-align:right;padding-right:100px;">前端小白</div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;我生命中的一部分叫做求职（求知）&quot;&gt;&lt;a href=&quot;#我生命中的一部分叫做求职（求知）&quot; class=&quot;headerlink&quot; title=&quot;我生命中的一部分叫做求职（求知）&quot;&gt;&lt;/a&gt;我生命中的一部分叫做求职（求知）&lt;/h1&gt;&lt;h3 id=&quot;面试&quot;&gt;&lt;a href=&quot;#面试&quot; class=&quot;headerlink&quot; title=&quot;面试&quot;&gt;&lt;/a&gt;面试&lt;/h3&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; 我认为在这一面试的过程中，既是对以往学习的检视，又是一个重新认识自己的过&lt;br&gt;程，面试过程中，会知道自己哪些方面不足，哪些方面欠缺，这样，又是给以后的学习过程中指明了一个方向。&lt;br&gt;
    
    </summary>
    
      <category term="找工作" scheme="http://yoursite.com/categories/%E6%89%BE%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="我生命中的一部分" scheme="http://yoursite.com/tags/%E6%88%91%E7%94%9F%E5%91%BD%E4%B8%AD%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86/"/>
    
  </entry>
  
</feed>
